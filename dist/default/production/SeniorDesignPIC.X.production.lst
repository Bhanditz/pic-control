

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 14 04:36:50 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F26J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F26J53 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _ANCON0bits	set	3912
    48  0000                     _LATBbits	set	3978
    49  0000                     _PORTAbits	set	3968
    50  0000                     _LATAbits	set	3977
    51  0000                     _LATCbits	set	3979
    52  0000                     _PORTCbits	set	3970
    53  0000                     _TRISBbits	set	3987
    54  0000                     _TRISAbits	set	3986
    55  0000                     _TRISCbits	set	3988
    56  0000                     _VCFG0	set	32278
    57  0000                     _VCFG1	set	32279
    58                           
    59                           ; #config settings
    60  0000                     
    61                           	psect	cinit
    62  00FDB4                     __pcinit:
    63                           	opt stack 0
    64  00FDB4                     start_initialization:
    65                           	opt stack 0
    66  00FDB4                     __initialization:
    67                           	opt stack 0
    68  00FDB4                     end_of_initialization:
    69                           	opt stack 0
    70  00FDB4                     __end_of__initialization:
    71                           	opt stack 0
    72  00FDB4  0100               	movlb	0
    73  00FDB6  EF38  F07F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	opt stack 0
    78  000001                     ?___awdiv:
    79                           	opt stack 0
    80  000001                     ___awdiv@dividend:
    81                           	opt stack 0
    82                           
    83                           ; 2 bytes @ 0x0
    84  000001                     	ds	2
    85  000003                     ___awdiv@divisor:
    86                           	opt stack 0
    87                           
    88                           ; 2 bytes @ 0x2
    89  000003                     	ds	2
    90  000005                     ___awdiv@counter:
    91                           	opt stack 0
    92                           
    93                           ; 1 bytes @ 0x4
    94  000005                     	ds	1
    95  000006                     ___awdiv@sign:
    96                           	opt stack 0
    97                           
    98                           ; 1 bytes @ 0x5
    99  000006                     	ds	1
   100  000007                     ___awdiv@quotient:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0x6
   104  000007                     	ds	2
   105  000009                     delay_ms@x:
   106                           	opt stack 0
   107                           
   108                           ; 2 bytes @ 0x8
   109  000009                     	ds	2
   110  00000B                     ??_delay_ms:
   111                           
   112                           ; 1 bytes @ 0xA
   113  00000B                     	ds	1
   114  00000C                     delay_ms@i:
   115                           	opt stack 0
   116                           
   117                           ; 2 bytes @ 0xB
   118  00000C                     	ds	2
   119  00000E                     ??_main:
   120                           
   121                           ; 1 bytes @ 0xD
   122  00000E                     	ds	2
   123  000010                     main@PicsPerSecond:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0xF
   127  000010                     	ds	2
   128  000012                     main@Sensing_Plane_Delay:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x11
   132  000012                     	ds	2
   133  000014                     main@High_Res_Delay:
   134                           	opt stack 0
   135                           
   136                           ; 2 bytes @ 0x13
   137  000014                     	ds	2
   138  000016                     main@laserType:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x15
   142  000016                     	ds	2
   143  000018                     main@High_Speed_Delay:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x17
   147  000018                     	ds	2
   148                           
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 50 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;  High_Speed_D    2   23[COMRAM] int 
   159 ;;  laserType       2   21[COMRAM] int 
   160 ;;  High_Res_Del    2   19[COMRAM] int 
   161 ;;  Sensing_Plan    2   17[COMRAM] int 
   162 ;;  PicsPerSecon    2   15[COMRAM] int 
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   173 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   175 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   176 ;;Total ram usage:       12 bytes
   177 ;; Hardware stack levels required when called:    1
   178 ;; This function calls:
   179 ;;		___awdiv
   180 ;;		_delay_ms
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187  00FE70                     __ptext0:
   188                           	opt stack 0
   189  00FE70                     _main:
   190                           	opt stack 30
   191                           
   192                           ;main.c: 51: int PicsPerSecond = 5;
   193                           
   194                           ;incstack = 0
   195  00FE70  0E00               	movlw	0
   196  00FE72  6E11               	movwf	main@PicsPerSecond+1,c
   197  00FE74  0E05               	movlw	5
   198  00FE76  6E10               	movwf	main@PicsPerSecond,c
   199                           
   200                           ;main.c: 52: int Sensing_Plane_Delay = 0;
   201  00FE78  0E00               	movlw	0
   202  00FE7A  6E13               	movwf	main@Sensing_Plane_Delay+1,c
   203  00FE7C  0E00               	movlw	0
   204  00FE7E  6E12               	movwf	main@Sensing_Plane_Delay,c
   205                           
   206                           ;main.c: 53: int High_Speed_Delay = 1000 / 125;
   207  00FE80  0E00               	movlw	0
   208  00FE82  6E19               	movwf	main@High_Speed_Delay+1,c
   209  00FE84  0E08               	movlw	8
   210  00FE86  6E18               	movwf	main@High_Speed_Delay,c
   211                           
   212                           ;main.c: 54: int High_Res_Delay = 1000 / (PicsPerSecond*2);
   213  00FE88  0E03               	movlw	3
   214  00FE8A  6E02               	movwf	___awdiv@dividend+1,c
   215  00FE8C  0EE8               	movlw	232
   216  00FE8E  6E01               	movwf	___awdiv@dividend,c
   217  00FE90  90D8               	bcf	status,0,c
   218  00FE92  3410               	rlcf	main@PicsPerSecond,w,c
   219  00FE94  6E03               	movwf	___awdiv@divisor,c
   220  00FE96  3411               	rlcf	main@PicsPerSecond+1,w,c
   221  00FE98  6E04               	movwf	___awdiv@divisor+1,c
   222  00FE9A  ECF6  F07E         	call	___awdiv	;wreg free
   223  00FE9E  C001  F014         	movff	?___awdiv,main@High_Res_Delay
   224  00FEA2  C002  F015         	movff	?___awdiv+1,main@High_Res_Delay+1
   225                           
   226                           ;main.c: 56: ANCON0bits.PCFG2 = 1;
   227  00FEA6  010F               	movlb	15	; () banked
   228  00FEA8  8548               	bsf	72,2,b	;volatile
   229                           
   230                           ; BSR set to: 15
   231                           ;main.c: 57: VCFG1 = 0;
   232  00FEAA  9EC2               	bcf	4034,7,c	;volatile
   233                           
   234                           ; BSR set to: 15
   235                           ;main.c: 58: VCFG0 = 0;
   236  00FEAC  9CC2               	bcf	4034,6,c	;volatile
   237                           
   238                           ; BSR set to: 15
   239                           ;main.c: 60: TRISCbits.TRISC6 = 0;
   240  00FEAE  9C94               	bcf	3988,6,c	;volatile
   241                           
   242                           ; BSR set to: 15
   243                           ;main.c: 61: TRISCbits.TRISC7 = 0;
   244  00FEB0  9E94               	bcf	3988,7,c	;volatile
   245                           
   246                           ; BSR set to: 15
   247                           ;main.c: 62: TRISAbits.TRISA0 = 0;
   248  00FEB2  9092               	bcf	3986,0,c	;volatile
   249                           
   250                           ; BSR set to: 15
   251                           ;main.c: 63: TRISAbits.TRISA1 = 0;
   252  00FEB4  9292               	bcf	3986,1,c	;volatile
   253                           
   254                           ; BSR set to: 15
   255                           ;main.c: 64: TRISBbits.TRISB5 = 0;
   256  00FEB6  9A93               	bcf	3987,5,c	;volatile
   257                           
   258                           ; BSR set to: 15
   259                           ;main.c: 65: TRISBbits.TRISB4 = 0;
   260  00FEB8  9893               	bcf	3987,4,c	;volatile
   261                           
   262                           ; BSR set to: 15
   263                           ;main.c: 67: TRISAbits.TRISA2 = 1;
   264  00FEBA  8492               	bsf	3986,2,c	;volatile
   265                           
   266                           ; BSR set to: 15
   267                           ;main.c: 68: TRISCbits.TRISC0 = 1;
   268  00FEBC  8094               	bsf	3988,0,c	;volatile
   269                           
   270                           ; BSR set to: 15
   271                           ;main.c: 69: TRISCbits.TRISC1 = 1;
   272  00FEBE  8294               	bsf	3988,1,c	;volatile
   273  00FEC0                     l33:
   274  00FEC0  B082               	btfsc	3970,0,c	;volatile
   275  00FEC2  D7FE               	goto	l33
   276                           
   277                           ;main.c: 78: int laserType = 0;
   278  00FEC4  0E00               	movlw	0
   279  00FEC6  6E17               	movwf	main@laserType+1,c
   280  00FEC8  0E00               	movlw	0
   281  00FECA  6E16               	movwf	main@laserType,c
   282                           
   283                           ;main.c: 80: if(laserType == 1){
   284  00FECC  0416               	decf	main@laserType,w,c
   285  00FECE  1017               	iorwf	main@laserType+1,w,c
   286  00FED0  A4D8               	btfss	status,2,c
   287  00FED2  D003               	goto	l36
   288                           
   289                           ;main.c: 81: LATCbits.LATC7 = 1;
   290  00FED4  8E8B               	bsf	3979,7,c	;volatile
   291                           
   292                           ;main.c: 82: LATCbits.LATC6 = 0;
   293  00FED6  9C8B               	bcf	3979,6,c	;volatile
   294                           
   295                           ;main.c: 83: }
   296  00FED8  D002               	goto	l37
   297  00FEDA                     l36:
   298                           
   299                           ;main.c: 84: else{
   300                           ;main.c: 85: LATCbits.LATC6 = 1;
   301  00FEDA  8C8B               	bsf	3979,6,c	;volatile
   302                           
   303                           ;main.c: 86: LATCbits.LATC7 = 0;
   304  00FEDC  9E8B               	bcf	3979,7,c	;volatile
   305  00FEDE                     l37:
   306                           
   307                           ;main.c: 87: }
   308                           ;main.c: 91: LATAbits.LATA1 = 1;
   309  00FEDE  8289               	bsf	3977,1,c	;volatile
   310                           
   311                           ;main.c: 92: LATAbits.LATA0 = 0;
   312  00FEE0  9089               	bcf	3977,0,c	;volatile
   313                           
   314                           ;main.c: 93: _delay((unsigned long)((40)*(8000000/4000.0)));
   315  00FEE2  0E68               	movlw	104
   316  00FEE4  6E0E               	movwf	??_main& (0+255),c
   317  00FEE6  0EE4               	movlw	228
   318  00FEE8                     u257:
   319  00FEE8  2EE8               	decfsz	wreg,f,c
   320  00FEEA  D7FE               	bra	u257
   321  00FEEC  2E0E               	decfsz	??_main& (0+255),f,c
   322  00FEEE  D7FC               	bra	u257
   323  00FEF0  D000               	nop2	
   324  00FEF2  D080               	goto	l43
   325  00FEF4                     l860:
   326                           
   327                           ;main.c: 98: if(PORTAbits.RA2 == 0){
   328  00FEF4  B480               	btfsc	3968,2,c	;volatile
   329  00FEF6  D7FE               	goto	l860
   330                           
   331                           ;main.c: 100: if(laserType == 1){
   332  00FEF8  0416               	decf	main@laserType,w,c
   333  00FEFA  1017               	iorwf	main@laserType+1,w,c
   334  00FEFC  A4D8               	btfss	status,2,c
   335  00FEFE  D002               	goto	l40
   336                           
   337                           ;main.c: 101: LATCbits.LATC7 = 0;
   338  00FF00  9E8B               	bcf	3979,7,c	;volatile
   339                           
   340                           ;main.c: 102: }
   341  00FF02  D001               	goto	l41
   342  00FF04                     l40:
   343                           
   344                           ;main.c: 103: else{
   345                           ;main.c: 104: LATCbits.LATC6 = 0;
   346  00FF04  9C8B               	bcf	3979,6,c	;volatile
   347  00FF06                     l41:
   348                           
   349                           ;main.c: 105: }
   350                           ;main.c: 107: LATAbits.LATA0 = 1;
   351  00FF06  8089               	bsf	3977,0,c	;volatile
   352                           
   353                           ;main.c: 108: delay_ms(Sensing_Plane_Delay);
   354  00FF08  C012  F009         	movff	main@Sensing_Plane_Delay,delay_ms@x
   355  00FF0C  C013  F00A         	movff	main@Sensing_Plane_Delay+1,delay_ms@x+1
   356  00FF10  ECDD  F07E         	call	_delay_ms	;wreg free
   357                           
   358                           ;main.c: 110: delay_ms(High_Speed_Delay / 2);
   359  00FF14  C018  F001         	movff	main@High_Speed_Delay,___awdiv@dividend
   360  00FF18  C019  F002         	movff	main@High_Speed_Delay+1,___awdiv@dividend+1
   361  00FF1C  0E00               	movlw	0
   362  00FF1E  6E04               	movwf	___awdiv@divisor+1,c
   363  00FF20  0E02               	movlw	2
   364  00FF22  6E03               	movwf	___awdiv@divisor,c
   365  00FF24  ECF6  F07E         	call	___awdiv	;wreg free
   366  00FF28  C001  F009         	movff	?___awdiv,delay_ms@x
   367  00FF2C  C002  F00A         	movff	?___awdiv+1,delay_ms@x+1
   368  00FF30  ECDD  F07E         	call	_delay_ms	;wreg free
   369                           
   370                           ;main.c: 112: LATBbits.LATB5 = 1;
   371  00FF34  8A8A               	bsf	3978,5,c	;volatile
   372                           
   373                           ;main.c: 113: delay_ms(High_Speed_Delay / 2);
   374  00FF36  C018  F001         	movff	main@High_Speed_Delay,___awdiv@dividend
   375  00FF3A  C019  F002         	movff	main@High_Speed_Delay+1,___awdiv@dividend+1
   376  00FF3E  0E00               	movlw	0
   377  00FF40  6E04               	movwf	___awdiv@divisor+1,c
   378  00FF42  0E02               	movlw	2
   379  00FF44  6E03               	movwf	___awdiv@divisor,c
   380  00FF46  ECF6  F07E         	call	___awdiv	;wreg free
   381  00FF4A  C001  F009         	movff	?___awdiv,delay_ms@x
   382  00FF4E  C002  F00A         	movff	?___awdiv+1,delay_ms@x+1
   383  00FF52  ECDD  F07E         	call	_delay_ms	;wreg free
   384                           
   385                           ;main.c: 114: LATBbits.LATB5 = 0;
   386  00FF56  9A8A               	bcf	3978,5,c	;volatile
   387                           
   388                           ;main.c: 116: delay_ms(High_Speed_Delay / 2);
   389  00FF58  C018  F001         	movff	main@High_Speed_Delay,___awdiv@dividend
   390  00FF5C  C019  F002         	movff	main@High_Speed_Delay+1,___awdiv@dividend+1
   391  00FF60  0E00               	movlw	0
   392  00FF62  6E04               	movwf	___awdiv@divisor+1,c
   393  00FF64  0E02               	movlw	2
   394  00FF66  6E03               	movwf	___awdiv@divisor,c
   395  00FF68  ECF6  F07E         	call	___awdiv	;wreg free
   396  00FF6C  C001  F009         	movff	?___awdiv,delay_ms@x
   397  00FF70  C002  F00A         	movff	?___awdiv+1,delay_ms@x+1
   398  00FF74  ECDD  F07E         	call	_delay_ms	;wreg free
   399                           
   400                           ;main.c: 118: LATBbits.LATB4 = 1;
   401  00FF78  888A               	bsf	3978,4,c	;volatile
   402                           
   403                           ;main.c: 119: delay_ms(High_Speed_Delay / 2);
   404  00FF7A  C018  F001         	movff	main@High_Speed_Delay,___awdiv@dividend
   405  00FF7E  C019  F002         	movff	main@High_Speed_Delay+1,___awdiv@dividend+1
   406  00FF82  0E00               	movlw	0
   407  00FF84  6E04               	movwf	___awdiv@divisor+1,c
   408  00FF86  0E02               	movlw	2
   409  00FF88  6E03               	movwf	___awdiv@divisor,c
   410  00FF8A  ECF6  F07E         	call	___awdiv	;wreg free
   411  00FF8E  C001  F009         	movff	?___awdiv,delay_ms@x
   412  00FF92  C002  F00A         	movff	?___awdiv+1,delay_ms@x+1
   413  00FF96  ECDD  F07E         	call	_delay_ms	;wreg free
   414                           
   415                           ;main.c: 120: LATBbits.LATB4 = 0;
   416  00FF9A  988A               	bcf	3978,4,c	;volatile
   417                           
   418                           ;main.c: 121: delay_ms(High_Speed_Delay / 2);
   419  00FF9C  C018  F001         	movff	main@High_Speed_Delay,___awdiv@dividend
   420  00FFA0  C019  F002         	movff	main@High_Speed_Delay+1,___awdiv@dividend+1
   421  00FFA4  0E00               	movlw	0
   422  00FFA6  6E04               	movwf	___awdiv@divisor+1,c
   423  00FFA8  0E02               	movlw	2
   424  00FFAA  6E03               	movwf	___awdiv@divisor,c
   425  00FFAC  ECF6  F07E         	call	___awdiv	;wreg free
   426  00FFB0  C001  F009         	movff	?___awdiv,delay_ms@x
   427  00FFB4  C002  F00A         	movff	?___awdiv+1,delay_ms@x+1
   428  00FFB8  ECDD  F07E         	call	_delay_ms	;wreg free
   429                           
   430                           ;main.c: 123: LATAbits.LATA1 = 1;
   431  00FFBC  8289               	bsf	3977,1,c	;volatile
   432                           
   433                           ;main.c: 124: LATAbits.LATA0 = 0;
   434  00FFBE  9089               	bcf	3977,0,c	;volatile
   435                           
   436                           ;main.c: 126: delay_ms(High_Res_Delay - (2 * High_Speed_Delay));
   437  00FFC0  C018  F00E         	movff	main@High_Speed_Delay,??_main
   438  00FFC4  C019  F00F         	movff	main@High_Speed_Delay+1,??_main+1
   439  00FFC8  90D8               	bcf	status,0,c
   440  00FFCA  360E               	rlcf	??_main,f,c
   441  00FFCC  360F               	rlcf	??_main+1,f,c
   442  00FFCE  1E0E               	comf	??_main,f,c
   443  00FFD0  1E0F               	comf	??_main+1,f,c
   444  00FFD2  4A0E               	infsnz	??_main,f,c
   445  00FFD4  2A0F               	incf	??_main+1,f,c
   446  00FFD6  5014               	movf	main@High_Res_Delay,w,c
   447  00FFD8  240E               	addwf	??_main,w,c
   448  00FFDA  6E09               	movwf	delay_ms@x,c
   449  00FFDC  5015               	movf	main@High_Res_Delay+1,w,c
   450  00FFDE  200F               	addwfc	??_main+1,w,c
   451  00FFE0  6E0A               	movwf	delay_ms@x+1,c
   452  00FFE2  ECDD  F07E         	call	_delay_ms	;wreg free
   453                           
   454                           ;main.c: 129: if(laserType == 1){
   455  00FFE6  0416               	decf	main@laserType,w,c
   456  00FFE8  1017               	iorwf	main@laserType+1,w,c
   457  00FFEA  A4D8               	btfss	status,2,c
   458  00FFEC  D002               	goto	l42
   459                           
   460                           ;main.c: 130: LATCbits.LATC7 = 1;
   461  00FFEE  8E8B               	bsf	3979,7,c	;volatile
   462                           
   463                           ;main.c: 131: }
   464  00FFF0  D001               	goto	l43
   465  00FFF2                     l42:
   466                           
   467                           ;main.c: 132: else{
   468                           ;main.c: 133: LATCbits.LATC6 = 1;
   469  00FFF2  8C8B               	bsf	3979,6,c	;volatile
   470  00FFF4                     l43:
   471                           
   472                           ;main.c: 134: }
   473                           ;main.c: 136: LATAbits.LATA1 = 0;
   474  00FFF4  9289               	bcf	3977,1,c	;volatile
   475  00FFF6  D77E               	goto	l860
   476  00FFF8                     __end_of_main:
   477                           	opt stack 0
   478                           wreg	equ	0xFE8
   479                           status	equ	0xFD8
   480                           
   481 ;; *************** function _delay_ms *****************
   482 ;; Defined at:
   483 ;;		line 44 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  x               2    8[COMRAM] int 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  i               2   11[COMRAM] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   500 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   501 ;;Total ram usage:        5 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text1
   511  00FDBA                     __ptext1:
   512                           	opt stack 0
   513  00FDBA                     _delay_ms:
   514                           	opt stack 30
   515                           
   516                           ;main.c: 45: for (int i = 0; i < x; i++) {
   517                           
   518                           ;incstack = 0
   519  00FDBA  0E00               	movlw	0
   520  00FDBC  6E0D               	movwf	delay_ms@i+1,c
   521  00FDBE  0E00               	movlw	0
   522  00FDC0  6E0C               	movwf	delay_ms@i,c
   523  00FDC2  D009               	goto	l27
   524  00FDC4                     l774:
   525                           
   526                           ;main.c: 46: _delay((unsigned long)((1)*(8000000/4000.0)));
   527  00FDC4  0E03               	movlw	3
   528  00FDC6  6E0B               	movwf	??_delay_ms& (0+255),c
   529  00FDC8  0E98               	movlw	152
   530  00FDCA                     u267:
   531  00FDCA  2EE8               	decfsz	wreg,f,c
   532  00FDCC  D7FE               	bra	u267
   533  00FDCE  2E0B               	decfsz	??_delay_ms& (0+255),f,c
   534  00FDD0  D7FC               	bra	u267
   535  00FDD2  4A0C               	infsnz	delay_ms@i,f,c
   536  00FDD4  2A0D               	incf	delay_ms@i+1,f,c
   537  00FDD6                     l27:
   538  00FDD6  5009               	movf	delay_ms@x,w,c
   539  00FDD8  5C0C               	subwf	delay_ms@i,w,c
   540  00FDDA  500D               	movf	delay_ms@i+1,w,c
   541  00FDDC  0A80               	xorlw	128
   542  00FDDE  6E0B               	movwf	??_delay_ms& (0+255),c
   543  00FDE0  500A               	movf	delay_ms@x+1,w,c
   544  00FDE2  0A80               	xorlw	128
   545  00FDE4  580B               	subwfb	??_delay_ms& (0+255),w,c
   546  00FDE6  B0D8               	btfsc	status,0,c
   547  00FDE8  0012               	return	
   548  00FDEA  D7EC               	goto	l774
   549  00FDEC                     __end_of_delay_ms:
   550                           	opt stack 0
   551                           wreg	equ	0xFE8
   552                           status	equ	0xFD8
   553                           
   554 ;; *************** function ___awdiv *****************
   555 ;; Defined at:
   556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  dividend        2    0[COMRAM] int 
   559 ;;  divisor         2    2[COMRAM] int 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  quotient        2    6[COMRAM] int 
   562 ;;  sign            1    5[COMRAM] unsigned char 
   563 ;;  counter         1    4[COMRAM] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2    0[COMRAM] int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   576 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;Total ram usage:        8 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text2
   587  00FDEC                     __ptext2:
   588                           	opt stack 0
   589  00FDEC                     ___awdiv:
   590                           	opt stack 30
   591                           
   592                           ;incstack = 0
   593  00FDEC  0E00               	movlw	0
   594  00FDEE  6E06               	movwf	___awdiv@sign,c
   595  00FDF0  AE04               	btfss	___awdiv@divisor+1,7,c
   596  00FDF2  D006               	goto	l786
   597  00FDF4  6C03               	negf	___awdiv@divisor,c
   598  00FDF6  1E04               	comf	___awdiv@divisor+1,f,c
   599  00FDF8  B0D8               	btfsc	status,0,c
   600  00FDFA  2A04               	incf	___awdiv@divisor+1,f,c
   601  00FDFC  0E01               	movlw	1
   602  00FDFE  6E06               	movwf	___awdiv@sign,c
   603  00FE00                     l786:
   604  00FE00  AE02               	btfss	___awdiv@dividend+1,7,c
   605  00FE02  D006               	goto	l792
   606  00FE04  6C01               	negf	___awdiv@dividend,c
   607  00FE06  1E02               	comf	___awdiv@dividend+1,f,c
   608  00FE08  B0D8               	btfsc	status,0,c
   609  00FE0A  2A02               	incf	___awdiv@dividend+1,f,c
   610  00FE0C  0E01               	movlw	1
   611  00FE0E  1A06               	xorwf	___awdiv@sign,f,c
   612  00FE10                     l792:
   613  00FE10  0E00               	movlw	0
   614  00FE12  6E08               	movwf	___awdiv@quotient+1,c
   615  00FE14  0E00               	movlw	0
   616  00FE16  6E07               	movwf	___awdiv@quotient,c
   617  00FE18  5003               	movf	___awdiv@divisor,w,c
   618  00FE1A  1004               	iorwf	___awdiv@divisor+1,w,c
   619  00FE1C  B4D8               	btfsc	status,2,c
   620  00FE1E  D01C               	goto	l814
   621  00FE20  0E01               	movlw	1
   622  00FE22  6E05               	movwf	___awdiv@counter,c
   623  00FE24  D004               	goto	l800
   624  00FE26                     l798:
   625  00FE26  90D8               	bcf	status,0,c
   626  00FE28  3603               	rlcf	___awdiv@divisor,f,c
   627  00FE2A  3604               	rlcf	___awdiv@divisor+1,f,c
   628  00FE2C  2A05               	incf	___awdiv@counter,f,c
   629  00FE2E                     l800:
   630  00FE2E  AE04               	btfss	___awdiv@divisor+1,7,c
   631  00FE30  D7FA               	goto	l798
   632  00FE32                     l802:
   633  00FE32  90D8               	bcf	status,0,c
   634  00FE34  3607               	rlcf	___awdiv@quotient,f,c
   635  00FE36  3608               	rlcf	___awdiv@quotient+1,f,c
   636  00FE38  5003               	movf	___awdiv@divisor,w,c
   637  00FE3A  5C01               	subwf	___awdiv@dividend,w,c
   638  00FE3C  5004               	movf	___awdiv@divisor+1,w,c
   639  00FE3E  5802               	subwfb	___awdiv@dividend+1,w,c
   640  00FE40  A0D8               	btfss	status,0,c
   641  00FE42  D005               	goto	l810
   642  00FE44  5003               	movf	___awdiv@divisor,w,c
   643  00FE46  5E01               	subwf	___awdiv@dividend,f,c
   644  00FE48  5004               	movf	___awdiv@divisor+1,w,c
   645  00FE4A  5A02               	subwfb	___awdiv@dividend+1,f,c
   646  00FE4C  8007               	bsf	___awdiv@quotient,0,c
   647  00FE4E                     l810:
   648  00FE4E  90D8               	bcf	status,0,c
   649  00FE50  3204               	rrcf	___awdiv@divisor+1,f,c
   650  00FE52  3203               	rrcf	___awdiv@divisor,f,c
   651  00FE54  2E05               	decfsz	___awdiv@counter,f,c
   652  00FE56  D7ED               	goto	l802
   653  00FE58                     l814:
   654  00FE58  5006               	movf	___awdiv@sign,w,c
   655  00FE5A  B4D8               	btfsc	status,2,c
   656  00FE5C  D004               	goto	l818
   657  00FE5E  6C07               	negf	___awdiv@quotient,c
   658  00FE60  1E08               	comf	___awdiv@quotient+1,f,c
   659  00FE62  B0D8               	btfsc	status,0,c
   660  00FE64  2A08               	incf	___awdiv@quotient+1,f,c
   661  00FE66                     l818:
   662  00FE66  C007  F001         	movff	___awdiv@quotient,?___awdiv
   663  00FE6A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   664  00FE6E  0012               	return	
   665  00FE70                     __end_of___awdiv:
   666                           	opt stack 0
   667  0000                     wreg	equ	0xFE8
   668                           status	equ	0xFD8
   669                           wreg	equ	0xFE8
   670                           status	equ	0xFD8
   671                           
   672                           	psect	rparam
   673  0000                     wreg	equ	0xFE8
   674                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_ms
    _delay_ms->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1831
                                             13 COMRAM    12    12      0
                            ___awdiv
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     494
                                              8 COMRAM     5     3      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _delay_ms
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     19      19       1       26.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 14 04:36:50 2017

                     l40 FF04                       l41 FF06                       l33 FEC0  
                     l42 FFF2                       l27 FDD6                       l43 FFF4  
                     l36 FEDA                       l37 FEDE             ___awdiv@sign 0006  
           __CFG_CP0$OFF 000000              __CFG_OSC$EC 000000                      l800 FE2E  
                    l810 FE4E                      l802 FE32                      l814 FE58  
                    l818 FE66                      l860 FEF4                      l774 FDC4  
                    l792 FE10                      l786 FE00                      l798 FE26  
                    u257 FEE8                      u267 FDCA                      wreg 000FE8  
           __CFG_IESO$ON 000000            __CFG_FCMEN$ON 000000                     _main FE70  
 __CFG_DSWDTOSC$T1OSCREF 000000                     start 0000             ___param_bank 000000  
          __CFG_PLLDIV$6 000000                    ?_main 0001          __end_of___awdiv FE70  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _VCFG0 007E16  
                  _VCFG1 007E17                    status 000FD8          __initialization FDB4  
           __end_of_main FFF8                   ??_main 000E            __activetblptr 000000  
       ___awdiv@dividend 0001           __CFG_WDTEN$OFF 000000            main@laserType 0016  
         __CFG_WPCFG$OFF 000000           __CFG_WPDIS$OFF 000000         __end_of_delay_ms FDEC  
         __CFG_XINST$OFF 000000                ??___awdiv 0005           __CFG_STVREN$ON 000000  
        __CFG_CLKOEC$OFF 000000         ___awdiv@quotient 0007     __CFG_LS48MHZ$SYS48X8 000000  
             __accesstop 0060  __end_of__initialization FDB4            ___rparam_used 000001  
        __CFG_IOL1WAY$ON 000000     __CFG_WPEND$PAGE_WPFP 000000           __pcstackCOMRAM 0001  
        __CFG_DSWDTPS$G2 000000                ?_delay_ms 0009                  __Hparam 0000  
                __Lparam 0000                  ___awdiv FDEC                  __pcinit FDB4  
                __ramtop 0F00                  __ptext0 FE70                  __ptext1 FDBA  
                __ptext2 FDEC               ??_delay_ms 000B     end_of_initialization FDB4  
              _PORTAbits 000F80                _PORTCbits 000F82         __CFG_DSBOREN$OFF 000000  
       __CFG_CPUDIV$OSC1 000000                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94        __CFG_SOSCSEL$HIGH 000000        __CFG_WPFP$PAGE_63 000000  
    __CFG_MSSP7B_EN$MSK7 000000         __CFG_DSWDTEN$OFF 000000      start_initialization FDB4  
      __CFG_ADCSEL$BIT10 000000     main@High_Speed_Delay 0018        __size_of_delay_ms 0032  
               ?___awdiv 0001     __CFG_RTCOSC$T1OSCREF 000000                 _LATAbits 000F89  
               _LATBbits 000F8A                 _LATCbits 000F8B                delay_ms@i 000C  
              delay_ms@x 0009         __CFG_WDTPS$32768 000000        __CFG_CFGPLLEN$OFF 000000  
main@Sensing_Plane_Delay 0012               _ANCON0bits 000F48                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084                 _delay_ms FDBA  
          __size_of_main 0188       main@High_Res_Delay 0014        main@PicsPerSecond 0010  
